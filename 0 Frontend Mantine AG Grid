import React, { useState, useEffect } from 'react';
import { Autocomplete } from '@mantine/core';
import { ICellEditorParams } from 'ag-grid-community';

const MantineAutocompleteEditor = (props: ICellEditorParams) => {
  const [value, setValue] = useState<string>(props.value || '');  // Initialize with current value
  const options: string[] = props.options || [];  // Dropdown options

  useEffect(() => {
    // Update the value when props.value changes
    setValue(props.value || '');
  }, [props.value]);

  // Stop editing and save the value when Enter is pressed
  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {
    if (event.key === 'Enter') {
      props.api.stopEditing();  // Stop AG Grid's editing process
    }
  };

  return (
    <Autocomplete
      value={value}
      onChange={(newValue) => setValue(newValue)}  // Update the local state on change
      data={options}  // Dropdown options
      placeholder="Type or select"
      nothingFound="No options"
      styles={{ input: { width: '100%' } }}
      onKeyDown={handleKeyDown}  // Stop editing when Enter is pressed
    />
  );
};

// For AG Grid to retrieve the value after editing
MantineAutocompleteEditor.prototype.getValue = function () {
  return this.value;
};

export default MantineAutocompleteEditor;
