import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';

const SimpleInputCellEditor = forwardRef((props, ref) => {
  const valueRef = useRef(props.value || '');
  const inputRef = useRef(null);

  useEffect(() => {
    if (inputRef.current) {
      inputRef.current.focus();
    }
  }, []);

  useImperativeHandle(ref, () => ({
    getValue: () => valueRef.current,
  }));

  const handleChange = (event) => {
    valueRef.current = event.target.value;
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      props.stopEditing();
    }
  };

  return (
    <input
      ref={inputRef}
      defaultValue={valueRef.current}
      onChange={handleChange}
      onKeyDown={handleKeyDown}
      style={{ width: '100%' }}
    />
  );
});

export default SimpleInputCellEditor;
