import React from 'react';
import { Autocomplete } from '@mantine/core';
import { ICellEditorComp, ICellEditorParams } from 'ag-grid-community';

export class MantineAutocompleteEditor extends React.Component<ICellEditorParams> implements ICellEditorComp {
  private value: string;
  private options: string[];

  constructor(props: ICellEditorParams) {
    super(props);
    this.value = props.value || ''; // Initialize with the current value
    this.options = props.options || []; // Options for the autocomplete
  }

  // Method to get the current value after editing
  getValue() {
    return this.value;
  }

  // Focus on the input field after the editor is attached to the DOM
  afterGuiAttached() {
    const input = document.querySelector('input');
    if (input) input.focus();
  }

  // Handle input change for Mantine's Autocomplete
  handleInputChange = (newValue: string) => {
    this.value = newValue; // Update the value when the user types/selects
  };

  // Stop editing and save value when Enter is pressed
  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {
    if (event.key === 'Enter') {
      this.props.api.stopEditing(); // Stop AG Grid's editing process
    }
  };

  render() {
    return (
      <Autocomplete
        value={this.value}
        onChange={this.handleInputChange}
        data={this.options} // Dropdown options
        placeholder="Type or select"
        nothingFound="No options"
        styles={{ input: { width: '100%' } }}
        onKeyDown={this.handleKeyDown} // Stop editing when Enter is pressed
      />
    );
  }
}
