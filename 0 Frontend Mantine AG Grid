import { Autocomplete } from '@mantine/core';
import { forwardRef, useEffect, useImperativeHandle, useState } from 'react';

// Custom cell editor using Mantine Autocomplete
const MantineAutocompleteCellEditor = forwardRef((props, ref) => {
  // Initialize the state with the current value
  const [value, setValue] = useState(props.value || '');
  const options = props.values || []; // The options for the Autocomplete

  useEffect(() => {
    // Focus on the input after the component is mounted
    const input = document.querySelector('input');
    if (input) input.focus();
  }, []);

  // Use ImperativeHandle to expose AG Grid lifecycle methods
  useImperativeHandle(ref, () => ({
    getValue: () => value, // Return the selected or typed value
  }));

  return (
    <Autocomplete
      value={value}
      data={options} // Provide the dropdown options
      onChange={setValue} // Update the value when the user types/selects
      placeholder="Type or select"
      nothingFound="No options"
      styles={{ input: { width: '100%', height: '100%' } }}
    />
  );
});

export default MantineAutocompleteCellEditor;
