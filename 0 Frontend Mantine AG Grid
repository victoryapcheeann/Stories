import { Autocomplete } from '@mantine/core';
import { forwardRef, useImperativeHandle, useState, useEffect } from 'react';

// Define the custom Mantine Autocomplete cell editor
const MantineAutocompleteCellEditor = forwardRef((props, ref) => {
  // State to manage the selected value
  const [value, setValue] = useState(props.value || '');

  useEffect(() => {
    // Focus on the input when the component is mounted
    const input = document.querySelector('input');
    if (input) input.focus();
  }, []);

  // Expose lifecycle methods to AG Grid using useImperativeHandle
  useImperativeHandle(ref, () => ({
    // This method is called by AG Grid to retrieve the final value
    getValue: () => {
      return value;
    },
    // Optional: Ensure the input is focused when the editor is attached
    afterGuiAttached: () => {
      const input = document.querySelector('input');
      if (input) input.focus();
    }
  }));

  return (
    <Autocomplete
      value={value}
      data={props.values}  // Pass the dropdown options from props
      onChange={setValue}  // Update the value state when the user types/selects
      placeholder="Type or select"
      nothingFound="No options"
      styles={{ input: { width: '100%' } }}  // Style the input
    />
  );
});

export default MantineAutocompleteCellEditor;
