import React, { useState, useEffect, useRef } from 'react';
import { Autocomplete } from '@mantine/core';

const MantineAutocompleteCellEditor = (props) => {
  const [value, setValue] = useState(props.value || '');
  const options = props.values || [];
  const inputRef = useRef(null);
  const componentRef = useRef({});

  useEffect(() => {
    if (inputRef.current) {
      inputRef.current.focus();
    }
  }, []);

  // Assign methods directly to the componentRef.current
  useEffect(() => {
    componentRef.current.getValue = () => {
      console.log('getValue called, returning:', value);
      return value;
    };
  }, [value]);

  const handleChange = (newValue) => {
    setValue(newValue);
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      props.stopEditing();
    }
  };

  const handleItemSubmit = (item) => {
    const newValue = item.value || item;
    setValue(newValue);
    props.stopEditing();
  };

  return (
    <Autocomplete
      ref={inputRef}
      value={value}
      data={options}
      onChange={handleChange}
      onItemSubmit={handleItemSubmit}
      placeholder="Type or select"
      nothingFound="No options"
      styles={{ input: { width: '100%' } }}
      onKeyDown={handleKeyDown}
    />
  );
};

export default MantineAutocompleteCellEditor;
