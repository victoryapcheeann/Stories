import React, { useState } from 'react';
import { useForm, UseFormReturnType } from '@mantine/form';
import { Dropzone, MIME_TYPES } from '@mantine/dropzone';
import {
  TextInput,
  Button,
  Stack,
  Group,
  ActionIcon,
  Paper,
  Text,
} from '@mantine/core';
import { IconUpload, IconTrash, IconFile } from '@tabler/icons-react';

// Define types for the form
interface FormValues {
  strings: string[];
  files: File[];
}

const MyForm: React.FC = () => {
  const form: UseFormReturnType<FormValues> = useForm<FormValues>({
    initialValues: {
      strings: [], // List of strings
      files: [],   // List of files
    },
  });

  const [newString, setNewString] = useState<string>('');

  // Function to add a string
  const addString = () => {
    if (newString.trim()) {
      form.setFieldValue('strings', [...form.values.strings, newString.trim()]);
      setNewString('');
    }
  };

  // Function to remove a string
  const removeString = (index: number) => {
    form.setFieldValue(
      'strings',
      form.values.strings.filter((_, i) => i !== index)
    );
  };

  // Function to add files
  const addFiles = (newFiles: File[]) => {
    form.setFieldValue('files', [...form.values.files, ...newFiles]);
  };

  // Function to remove a file
  const removeFile = (index: number) => {
    form.setFieldValue(
      'files',
      form.values.files.filter((_, i) => i !== index)
    );
  };

  // Handle form submission
  const handleSubmit = (values: FormValues) => {
    console.log('Form Values:', values);
  };

  return (
    <form onSubmit={form.onSubmit(handleSubmit)}>
      <Stack spacing="lg">

        {/* String Input Section */}
        <Group>
          <TextInput
            value={newString}
            onChange={(event) => setNewString(event.currentTarget.value)}
            placeholder="Add new string"
          />
          <Button onClick={addString}>Add</Button>
        </Group>

        {/* Display List of Strings */}
        {form.values.strings.length > 0 && (
          <Stack spacing="sm">
            {form.values.strings.map((item, index) => (
              <Group key={index} spacing="xs">
                <TextInput
                  value={item}
                  onChange={(event) =>
                    form.setFieldValue(
                      `strings.${index}`,
                      event.currentTarget.value
                    )
                  }
                  style={{ flex: 1 }}
                />
                <ActionIcon color="red" onClick={() => removeString(index)}>
                  <IconTrash size={16} />
                </ActionIcon>
              </Group>
            ))}
          </Stack>
        )}

        {/* File Dropzone Section */}
        <Dropzone
          onDrop={(files) => addFiles(files)}
          accept={[MIME_TYPES.png, MIME_TYPES.jpeg, MIME_TYPES.pdf]}
          multiple
        >
          {() => (
            <Group position="center" spacing="xl" style={{ minHeight: 120 }}>
              <IconUpload size={32} />
              <Text>Drag files here or click to select files</Text>
            </Group>
          )}
        </Dropzone>

        {/* Display Uploaded Files */}
        {form.values.files.length > 0 && (
          <Stack spacing="sm">
            {form.values.files.map((file, index) => (
              <Paper
                key={index}
                shadow="xs"
                padding="sm"
                withBorder
                style={{
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'center',
                }}
              >
                <Group spacing="xs">
                  <IconFile size={16} />
                  <Text size="sm" lineClamp={1}>
                    {file.name}
                  </Text>
                </Group>
                <ActionIcon color="red" onClick={() => removeFile(index)}>
                  <IconTrash size={16} />
                </ActionIcon>
              </Paper>
            ))}
          </Stack>
        )}

        {/* Submit Button */}
        <Button type="submit">Submit</Button>
      </Stack>
    </form>
  );
};

export default MyForm;
